using System;
using System.Linq;
using Content.Shared.ERP;
using Content.Shared.Preferences;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Preferences.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class HumanoidCharacterProfileEditor : ContainerButton
    {
        private HumanoidCharacterProfile? _profile;
        public event Action<HumanoidCharacterProfile>? OnProfileChanged;

        public HumanoidCharacterProfileEditor()
        {
            RobustXamlLoader.Load(this);

            ERPStatus.OnERPStatusChanged += OnERPStatusChanged;
        }

        public void SetProfile(HumanoidCharacterProfile profile)
        {
            _profile = profile;
            ERPStatus.SetValue(profile.ERPStatus);
        }

        private void OnERPStatusChanged(ERPStatus status)
        {
            if (_profile == null) return;

            var profile = _profile.WithCharacterAppearance(_profile.Appearance);
            profile = new HumanoidCharacterProfile(
                profile.Name,
                profile.FlavorText,
                profile.Species,
                profile.Age,
                profile.Sex,
                profile.Gender,
                profile.Appearance,
                profile.SpawnPriority,
                status,
                profile.JobPriorities.ToDictionary(x => x.Key, x => x.Value),
                profile.PreferenceUnavailable,
                profile.AntagPreferences.ToHashSet(),
                profile.TraitPreferences.ToHashSet(),
                profile.Loadouts.ToDictionary(x => x.Key, x => x.Value));

            _profile = profile;
            OnProfileChanged?.Invoke(profile);
        }
    }
}